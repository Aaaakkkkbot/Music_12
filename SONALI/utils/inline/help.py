from typing import Union

from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from SONALI import app



    buttons = [
        [
            InlineKeyboardButton(text="·¥è·¥°…¥·¥á Ä", user_id=config.OWNER_ID[0]),
            InlineKeyboardButton(
                text="s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/ur_support07"
            ),
        ],
        [
            InlineKeyboardButton(text="…¥·¥á·¥õ·¥°·¥è Ä·¥ã", url=f"t.me/RishuNetwork"),
            InlineKeyboardButton(text="·¥Ä ü ü  ô·¥è·¥õs", url=f"https://t.me/Vip_robotz/4"),
        ],
        [
            InlineKeyboardButton(text="ñ®†Backñ®†", callback_data="settingsback_helper")
        ],  # Use a default label for the back button
    ]
    await callback_query.message.edit_text(
        "‚ú¶ **·¥õ ú…™s  ô·¥è·¥õ …™s ·¥ç·¥Ä·¥Ö·¥á  ô è ·¥Ä s·¥ã…™ ü ü·¥á·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä ·¥õ·¥è ·¥ç·¥Ä·¥ã·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥á·¥Äs è ·¥õ·¥è ·¥ç·¥Ä…¥·¥Ä…¢·¥á ·¥Ä…¥·¥Ö ·¥ç·¥è Ä·¥á “ì·¥ú…¥.**\n\n‚ú¶ **·¥°…™·¥õ ú ·¥ä·¥ús·¥õ ·¥Ä “ì·¥á·¥° ·¥Ñ ü…™·¥Ñ·¥ãs,  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ñ·¥è…¥·¥õ Ä·¥è ü ·¥á·¥†·¥á Ä è·¥õ ú…™…¥…¢‚Äî ü…™·¥ã·¥á s·¥á·¥õ·¥õ…™…¥…¢ ·¥ú·¥ò ·¥è·¥°…¥·¥á Ä s·¥á·¥õ·¥õ…™…¥…¢s**\n\n‚ú¶ **·¥õ ú·¥á  ô·¥è·¥õ …™s ·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥õ·¥è  ú·¥á ü·¥ò  è·¥è·¥ú ·¥ç·¥Ä…¥·¥Ä…¢·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò s·¥ç·¥è·¥è·¥õ ú ü è ·¥Ä…¥·¥Ö ·¥á…¥·¥ä·¥è è ·¥ç·¥ús…™·¥Ñ ·¥õ·¥è·¥è. ·¥ä·¥ús·¥õ ·¥ús·¥á ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° ·¥Ä…¥·¥Ö s·¥á·¥á  ú·¥è·¥° ·¥á·¥Äs è …™·¥õ …™s!**",
        reply_markup=InlineKeyboardMarkup(buttons),
    )


@app.on_callback_query(filters.regex("settings_back_helperr"))
async def feature_callback(client: Client, callback_query: CallbackQuery):
    keyboard = [
        [
            InlineKeyboardButton(
                text="·¥ã…™·¥Ö…¥·¥Ä·¥ò ·¥ç·¥á …™…¥ …¢ Ä·¥è·¥ú·¥ò",
                url=f"https://t.me/{app.username}?startgroup=true",
            ),
        ],
        [
            InlineKeyboardButton(text="·¥ç·¥ús…™·¥Ñ", callback_data="music"),
            InlineKeyboardButton(text="·¥ç·¥Ä…¥·¥á…¢·¥á·¥ç·¥á…¥·¥õ", callback_data="settings_back_helper"),
        ],
        [InlineKeyboardButton(text="‚úØ  ú·¥è·¥ç·¥á ‚úØ", callback_data="go_to_start")],
    ]
    await callback_query.message.edit_text(
        f"**W·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è** {app.mention}\n\n**Ex·¥ò ü·¥è Ä·¥á ·¥Ä ·¥°…™·¥Ö·¥á  Ä·¥Ä…¥…¢·¥á ·¥è“ì “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás ·¥á…¥ ú·¥Ä…¥·¥Ñ·¥á  è·¥è·¥ú Ä ·¥ç·¥ús…™·¥Ñ ·¥áx·¥ò·¥á Ä…™·¥á…¥·¥Ñ·¥á. T·¥Ä·¥ò  ·¥õ·¥è …™…¥·¥†…™·¥õ·¥á ·¥õ ú·¥á  ô·¥è·¥õ ·¥õ·¥è  è·¥è·¥ú Ä ·¥è·¥°…¥ …¢ Ä·¥è·¥ú·¥ò ·¥è Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥á…¥…™·¥è è s·¥á·¥Ä·¥ç ü·¥áss ·¥ç·¥ús…™·¥Ñ …™…¥·¥õ·¥á…¢ Ä·¥Ä·¥õ…™·¥è…¥. Us·¥á ·¥õ ú·¥á ·¥ç·¥ús…™·¥Ñ  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥Ä ü ü ·¥õ ú·¥á ·¥ç·¥ús…™·¥Ñ- Ä·¥á ü·¥Ä·¥õ·¥á·¥Ö “ì·¥ú…¥·¥Ñ·¥õ…™·¥è…¥·¥Ä ü…™·¥õ…™·¥ás, “ì Ä·¥è·¥ç s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢  è·¥è·¥ú Ä “ì·¥Ä·¥†·¥è Ä…™·¥õ·¥á s·¥è…¥…¢s ·¥õ·¥è ·¥Ñ Ä·¥á·¥Ä·¥õ…™…¥…¢ ·¥ò ü·¥Ä è ü…™s·¥õs.!**",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )


def help_pannel(_, START: Union[bool, int] = None):
    first = [InlineKeyboardButton(text=_["CLOSE_BUTTON"], callback_data=f"close")]
    second = [
        
        InlineKeyboardButton(
            text=_["BACK_BUTTON"],
            callback_data=f"settingsback_helper",
        ),
    ]
    mark = second if START else first
    upl = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text=_["H_B_1"],
                    callback_data="help_callback hb1",
                )],
                 [
                InlineKeyboardButton(
                    text=_["H_B_2"],
                    callback_data="help_callback hb2",
                ),
                InlineKeyboardButton(
                    text=_["H_B_3"],
                    callback_data="help_callback hb3",
                ),
            ],
            [
                InlineKeyboardButton(
                    text=_["H_B_4"],
                    callback_data="help_callback hb4",
                ),
                InlineKeyboardButton(
                    text=_["H_B_5"],
                    callback_data="help_callback hb5",
                )],
                 [
                InlineKeyboardButton(
                    text=_["H_B_6"],
                    callback_data="help_callback hb6",
                ),
            ],
            [
                InlineKeyboardButton(
                    text=_["H_B_7"],
                    callback_data="help_callback hb7",
                ),
                InlineKeyboardButton(
                    text=_["H_B_8"],
                    callback_data="help_callback hb8",
                )],
                 [
                InlineKeyboardButton(
                    text=_["H_B_9"],
                    callback_data="help_callback hb9",
                ),
           
                InlineKeyboardButton(
                    text=_["H_B_10"],
                    callback_data="help_callback hb10",
                )],
                 [
                InlineKeyboardButton(
                    text=_["H_B_11"],
                    callback_data="help_callback hb11",
                ),
                InlineKeyboardButton(
                    text=_["H_B_12"],
                    callback_data="help_callback hb12",
                ),
            ],
            [
                InlineKeyboardButton(
                    text=_["H_B_13"],
                    callback_data="help_callback hb13",
                ),
                InlineKeyboardButton(
                    text=_["H_B_14"],
                    callback_data="help_callback hb14",
                )],
                 [
                InlineKeyboardButton(
                    text=_["H_B_15"],
                    callback_data="help_callback hb15",
                ),
            ],
            mark,
        ]
    )
    return upl


def help_back_markup(_):
    upl = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text=_["BACK_BUTTON"],
                    callback_data=f"settings_back_helper",
                ),
            ]
        ]
    )
    return upl


def private_help_panel(_):
    buttons = [
        [
            InlineKeyboardButton(
                text=_["S_B_4"],
                url=f"https://t.me/{app.username}?start=help",
            ),
        ],
    ]
    return buttons
